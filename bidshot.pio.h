// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ----- //
// dshot //
// ----- //

#define dshot_wrap_target 0
#define dshot_wrap 17
#define dshot_pio_version 0

static const uint16_t dshot_program_instructions[] = {
            //     .wrap_target
    0xa00b, //  0: mov    pins, !null                
    0xe053, //  1: set    y, 19                      
    0x6020, //  2: out    x, 32                      
    0x00a2, //  3: jmp    x != y, 2                  
    0xe02f, //  4: set    x, 15                      
    0xa203, //  5: mov    pins, null             [2] 
    0x6208, //  6: out    pins, 8                [2] 
    0xa00b, //  7: mov    pins, !null                
    0x0045, //  8: jmp    x--, 5                     
    0x6080, //  9: out    pindirs, 32                
    0x602b, // 10: out    x, 11                      
    0x004b, // 11: jmp    x--, 11                    
    0x602b, // 12: out    x, 11                      
    0x4008, // 13: in     pins, 8                    
    0x004d, // 14: jmp    x--, 13                    
    0x602a, // 15: out    x, 10                      
    0x4020, // 16: in     x, 32                      
    0x6080, // 17: out    pindirs, 32                
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program dshot_program = {
    .instructions = dshot_program_instructions,
    .length = 18,
    .origin = -1,
    .pio_version = dshot_pio_version,
#if PICO_PIO_VERSION > 0
    .used_gpio_ranges = 0x0
#endif
};

static inline pio_sm_config dshot_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + dshot_wrap_target, offset + dshot_wrap);
    return c;
}
#endif

